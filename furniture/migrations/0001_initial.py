# Generated by Django 5.0.3 on 2024-04-26 10:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import furniture.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coordinate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.PositiveIntegerField(verbose_name='X')),
                ('y', models.PositiveIntegerField(verbose_name='Y')),
            ],
        ),
        migrations.CreateModel(
            name='Furniture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование мебели')),
                ('name_english', models.CharField(max_length=128, unique=True, verbose_name='Наименование мебели на английском языке')),
                ('length', models.PositiveIntegerField(help_text='Длина в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина мебели')),
                ('width', models.PositiveIntegerField(help_text='Ширина в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Ширина мебели')),
                ('length_access', models.PositiveIntegerField(help_text='Длина c зоной подхода в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина мебели c зоной подхода')),
                ('width_access', models.PositiveIntegerField(help_text='Ширина c зоной подхода в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Ширина мебели c зоной подхода')),
                ('image', models.ImageField(blank=True, null=True, upload_to='furniture/', verbose_name='Изображение мебели')),
                ('power_socket_type', models.CharField(max_length=128, verbose_name='Тип электроточки')),
                ('first_power_socket_height', models.IntegerField(default=0, verbose_name='Высота первой электроточки')),
                ('first_power_socket_width', models.IntegerField(default=0, verbose_name='Расположение электроточки относительно середины ширины объекта')),
                ('second_power_socket_height', models.IntegerField(default=0, verbose_name='Высота первой электроточки')),
                ('second_power_socket_width', models.IntegerField(default=0, verbose_name='Расположение электроточки относительно середины ширины объекта')),
                ('power_socket_image', models.ImageField(blank=True, null=True, upload_to='furniture/', verbose_name='Изображение мебели')),
            ],
            options={
                'verbose_name': 'Мебель',
                'verbose_name_plural': 'Мебель',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование комнаты')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='FurniturePlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('furniture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='furniture.furniture', verbose_name='Мебель')),
                ('north_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата north-east')),
                ('north_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='furniture.coordinate', verbose_name='Координата north-west')),
                ('south_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-east')),
                ('south_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-west')),
            ],
            options={
                'verbose_name': 'Размещение мебели в помещении',
                'verbose_name_plural': 'Размещение мебели в помещении',
            },
        ),
        migrations.CreateModel(
            name='RoomLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название планировки')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата и время создания')),
                ('first_wall', models.PositiveIntegerField(help_text='Длина стены в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина 1 стены')),
                ('second_wall', models.PositiveIntegerField(help_text='Длина стены в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина 2 стены')),
                ('third_wall', models.PositiveIntegerField(help_text='Длина стены в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина 3 стены')),
                ('fourth_wall', models.PositiveIntegerField(help_text='Длина стены в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина 4 стены')),
                ('furniture_placement', models.ManyToManyField(through='furniture.FurniturePlacement', to='furniture.furniture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Планировка',
                'verbose_name_plural': 'Планировки',
            },
        ),
        migrations.CreateModel(
            name='PowerSocketPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('north_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата north-east')),
                ('north_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='furniture.coordinate', verbose_name='Координата north-west')),
                ('south_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-east')),
                ('south_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-west')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='furniture.roomlayout', verbose_name='Комната')),
            ],
            options={
                'verbose_name': 'Розетка в помещении',
                'verbose_name_plural': 'Розетки в помещении',
            },
        ),
        migrations.AddField(
            model_name='furnitureplacement',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='furniture.roomlayout', verbose_name='Комната'),
        ),
        migrations.CreateModel(
            name='DoorPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.PositiveIntegerField(help_text='Ширина в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Ширина двери')),
                ('open_inside', models.BooleanField(help_text='Открытие в помещении - 1, из помещения - 0', verbose_name='Направление открытия двери внутрь помещения')),
                ('north_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата north-east')),
                ('north_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='furniture.coordinate', verbose_name='Координата north-west')),
                ('south_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-east')),
                ('south_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-west')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='furniture.roomlayout', verbose_name='Комната')),
            ],
            options={
                'verbose_name': 'Дверь в помещении',
                'verbose_name_plural': 'Двери в помещении',
            },
        ),
        migrations.AddField(
            model_name='furniture',
            name='type_of_rooms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='furniture', to='furniture.roomtype', verbose_name='Комната'),
        ),
        migrations.CreateModel(
            name='WindowPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.PositiveIntegerField(help_text='Длина в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Длина окна')),
                ('width', models.PositiveIntegerField(help_text='Ширина в мм', validators=[furniture.validators.minimum_len_width_validator], verbose_name='Ширина окна')),
                ('north_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата north-east')),
                ('north_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='furniture.coordinate', verbose_name='Координата north-west')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='furniture.roomlayout', verbose_name='Комната')),
                ('south_east', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-east')),
                ('south_west', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='furniture.coordinate', verbose_name='Координата south-west')),
            ],
            options={
                'verbose_name': 'Окно в помещении',
                'verbose_name_plural': 'Окна в помещении',
            },
        ),
    ]
